<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.grafolioclone.mapper.UserMapper">

  <select id="getUserByMap"
          parameterType="Map"
          resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, SIGNUP_KIND, PW_MODIFY_DT, SIGNUP_DT
      FROM USER_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
      <if test="pw!=null">AND PW = #{pw}</if>
    </where>
  </select>

  <insert id="insertUser"
          parameterType="UserDto">
    INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , PW
      , NAME
      , MOBILE
      , SIGNUP_KIND
      , PW_MODIFY_DT
      , SIGNUP_DT
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{pw}
      , #{name}
      , #{mobile}
      , 0
      , CURRENT_DATE
      , CURRENT_DATE
    )
  </insert>
  
  <!-- 전체 유저 수 (최연승) -->
  <select id="getUserCount"
          resultType="java.lang.Integer">
    SELECT COUNT(*)
      FROM USER_T
  </select>
  
  <!-- 기본 정보 수정 (장윤수) -->
  <update id="updateUser"
          parameterType="UserDto">
    UPDATE USER_T
       SET NAME = #{name}
         , MOBILE = #{mobile}
         , PW = #{pw}
         , MINI_PROFILE_PICTURE_PATH = #{miniProfilePicturePath}
         , MAIN_PROFILE_PICTURE_PATH = #{mainProfilePicturePath}
         , DESCRIPT = #{descript}
         , PROFILE_CATEGORY = #{profileCategory}
     WHERE USER_NO = #{userNo}
  </update>

  <select id="getLeaveUserBymap"
          parameterType="Map"
          resultType="LeaveUserDto">
    SELECT LEAVE_USER_NO
      FROM LEAVE_USER_T
    <where>
      <if test="email!=null">EMAIL = #{email}</if>
    </where>
  </select>

  <delete id="deleteUser">
	  DELETE 
	    FROM USER_T
	   WHERE USER_NO = ${userNo}        
  </delete>

  <insert id="insertAccessHistory"
          parameterType="Map">
    INSERT INTO ACCESS_HISTORY_T (
        ACCESS_HISTORY_NO
      , EMAIL
      , IP
      , USER_AGENT
      , SESSION_ID
      , SIGNIN_DT
      , SIGNOUT_DT
    ) VALUES (
        ACCESS_HISTORY_SEQ.NEXTVAL
      , #{email}
      , #{ip}
      , #{userAgent}
      , #{sessionId}
      , CURRENT_DATE
      , NULL
    )
  </insert>
  
  <update id="updateAccessHistory">
    UPDATE ACCESS_HISTORY_T
       SET SIGNOUT_DT = CURRENT_DATE
     WHERE SESSION_ID = #{sessionID}
  </update>
  
  <!-- 프로필 정보 가져오기 (오채원)  -->
  <select id="getProfileByUserNo"
          resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </select>
  
  <!-- 프로필 목록 가져오기 (최연승) -->
  <select id="getProfileList"
          parameterType="Map"
          resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO DESC) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
              FROM USER_T)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 팔로우 -->
  <insert id="follow"
          parameterType="Map">
    INSERT INTO FOLLOW_T (
        FOLLOW_NO
      , FROM_USER
      , TO_USER
      , CREATE_DT
    ) VALUES (
        FOLLOW_SEQ.NEXTVAL
      , #{fromUser}
      , #{toUser}
      , CURRENT_DATE
    )
  </insert>
  
  <!-- 언팔로우 -->
  <delete id="unfollow"
          parameterType="Map">
    DELETE
      FROM FOLLOW_T
    <where>
      <if test="toUser!=null">TO_USER = #{toUser}</if>
      <if test="fromUser!=null">AND FROM_USER = #{fromUser}</if>
    </where>
  
  </delete>    
  
  <!-- 팔로잉 여부 -->
  <select id="checkFollow"
          parameterType="Map"
          resultType="int">
    SELECT COUNT(*)
      FROM FOLLOW_T
    <where>
      <if test="toUser!=null">TO_USER = #{toUser}</if>
      <if test="fromUser!=null">AND FROM_USER = #{fromUser}</if>
    </where>
  </select>
  
  <!-- 팔로잉 리스트 조회 -->
  <select id="fnGetFollowingList"
  		  parameterType="Map"
  		  resultType="UserDto">
	SELECT USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
	  FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
	          FROM USER_T
	         WHERE USER_NO IN (SELECT TO_USER
	                             FROM FOLLOW_T
	                            WHERE FROM_USER = #{fromUser}))
	 WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 팔로잉 유저 수 조회 -->
  <select id="fnGetFollowingCount"
  		  parameterType="Map"
  		  resultType="int">
  	SELECT COUNT(*) 
      FROM USER_T
     WHERE USER_NO IN (SELECT TO_USER
				         FROM FOLLOW_T
				        WHERE FROM_USER = #{fromUser})
  </select>
  
  <!-- 팔로워 리스트 조회 -->
  <select id="fnGetFollowerList"
  		  parameterType="Map"
  		  resultType="UserDto">
	SELECT USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
	  FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
	          FROM USER_T
	         WHERE USER_NO IN (SELECT FROM_USER
	                             FROM FOLLOW_T
	                            WHERE TO_USER = #{toUser}))
	 WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 팔로워 유저 수 조회 -->
  <select id="fnGetFollowerCount"
  		  parameterType="Map"
  		  resultType="int">
  	SELECT COUNT(*) 
      FROM USER_T
     WHERE USER_NO IN (SELECT FROM_USER
				         FROM FOLLOW_T
				        WHERE TO_USER = #{toUser})
  </select>
  
    <!-- 포스트 검색 쿼리 -->
 <select id="getSearchCount"
         resultType="int">
   SELECT COUNT(*)
     FROM USER_T
    WHERE NAME LIKE '%' || #{q} || '%'
 </select>
 
 <select id="getSearchList"
         parameterType="Map"
         resultType="UserDto">
    SELECT USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO DESC) AS RN, USER_NO, EMAIL, PW, NAME, MOBILE, MINI_PROFILE_PICTURE_PATH, MAIN_PROFILE_PICTURE_PATH, DESCRIPT, PROFILE_CATEGORY, PW_MODIFY_DT, SIGNUP_DT
              FROM USER_T
             WHERE NAME LIKE '%' || #{q} || '%')
    WHERE RN BETWEEN #{begin} AND #{end}
 </select>
 
</mapper>